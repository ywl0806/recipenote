spring:
  security:
    oauth2:
      client:
        registration:
          line:
            provider: line
            client-id: ${LINE-CLIENT-ID}
            client-secret: ${LINE-CLIENT-SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: post
            redirect-uri: http://localhost:8080/login/oauth2/code/line
            scope:
              - profile
              - openid
              - email
            clientName: LINE
        provider:
          line:
            authorization-uri: https://access.line.me/oauth2/v2.1/authorize
            token-uri: https://api.line.me/oauth2/v2.1/token
            jwk-set-uri: https://api.line.me/oauth2/v2.1/verify
            user-info-uri: https://api.line.me/v2/profile
            user-name-attribute: userId
            user-info-authentication-method: query
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    generate-ddl: true
    properties:
      hibernate.format_sql: true

  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:postgresql://localhost:5432/recipenote
    driver-class-name: org.postgresql.Driver
    username: recipenote
    password: password
  sql:
    init:
      mode: never

server:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
image:
  local: false

resource:
  path: file:///C:/Users/ywl08/resource/
upload:
  path: /upload/**
cloud:
  aws:
    stack:
      auto: false
    region:
      auto: false
      static: ap-northeast-1
googlemap:
  key: ${googlemap.key}
#logging:
#  level:
#    com:
#      amazonaws:
#        util:
#          EC2MetadataUtils: error
