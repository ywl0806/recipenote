/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main/resources/assets/js/searchIngredient.js":
/*!**********************************************************!*\
  !*** ./src/main/resources/assets/js/searchIngredient.js ***!
  \**********************************************************/
/***/ (() => {

eval("var addBtn = document.querySelectorAll(\".add-ingredient\");\nvar amounts = document.querySelectorAll('.amount');\nvar resultList = [];\n\nvar Ingredient = function Ingredient(id, name, price) {\n  this.id = id;\n  this.name = name;\n  this.price = price;\n}; //amount change\n\n\namounts.forEach(function (item) {\n  item.addEventListener('change', function () {\n    var index = item.id.substring(item.id.indexOf('_') + 1, item.id.length);\n\n    if ($(\"#name_\".concat(index)).val() !== null) {\n      var $total = $(\"#total_\".concat(index));\n      var $price = $(\"#price_\".concat(index));\n      $total.text((item.value * $price.val()).toFixed(1));\n      var $totalPrice = $('#total_price');\n      $totalPrice.text(0);\n\n      for (var i = 0; i < 30; i++) {\n        if ($(\"#price_\".concat(i)).val() !== 0) {\n          var TPNum = Number($totalPrice.text());\n          var TNum = Number($(\"#total_\".concat(i)).text());\n          $totalPrice.text(TPNum + TNum);\n        }\n      }\n    }\n  });\n}); //event of add ingredient\n\naddBtn.forEach(function (item) {\n  item.addEventListener(\"click\", function () {\n    var createIngBtn = document.getElementById('create-ingredient-submit');\n    var $alert = $('.ing-upload-alert');\n    var inputValue = document.getElementById('input-value');\n    var searchValue = document.getElementById('search-value');\n    var listContainer = document.getElementById('list-container');\n    var $searchBtn = $('#search-btn');\n    var name = document.getElementById('ingredient-name');\n    var gram = document.getElementById('ingredient-gram');\n    var price = document.getElementById('ingredient-price');\n    var jsonValue;\n    var rootId = item.id;\n    var rIndex = rootId.substring(rootId.indexOf('_') + 1, rootId.length);\n    var resultCon = new Ingredient();\n    name.value = \"\";\n    gram.value = \"\";\n    price.value = \"\";\n    searchValue.value = \"\";\n    resultList = [];\n    $(document).ready(function () {\n      //modal off\n      $('#ingredient-modal').on('hidden.bs.modal', function () {\n        removeAllChild(listContainer);\n        inputValue.textContent = \"\";\n        $searchBtn.off('click');\n        $('#search-result-input').off('click');\n        createIngBtn.removeEventListener('click', createIngredientHandler);\n        resultList = [];\n      });\n    }); //input button event\n\n    $('#search-result-input').on('click', function () {\n      $(\"#name_\".concat(rIndex)).val(resultCon.name);\n      $(\"#price_\".concat(rIndex)).val(resultCon.price);\n      $(\"#id_\".concat(rIndex)).val(resultCon.id);\n      $('#ingredient-modal').modal('hide');\n    }); //modal on\n\n    $('#ingredient-modal').modal();\n    var page = 0; //search function\n\n    function search() {\n      resultList = [];\n      var keyword = searchValue.value;\n      var index = 0;\n      $.ajax('/search-ingredient', {\n        method: 'GET',\n        data: {\n          'keyword': keyword,\n          'page': page\n        },\n        success: function success(result) {\n          console.log(result);\n          result.forEach(function (item) {\n            var tr = document.createElement('tr');\n            var E_name = document.createElement('td');\n            var E_price = document.createElement('td');\n            var ing = new Ingredient(item.id, item.name, item.price);\n            resultList.push(ing);\n            E_name.value = index;\n            E_price.value = index;\n            index++;\n            tr.classList.add('point');\n            tr.append(E_name);\n            tr.append(E_price);\n            E_name.textContent = item.name;\n            E_price.textContent = item.price;\n            listContainer.append(tr);\n          });\n        }\n      });\n    } //search event\n\n\n    $searchBtn.on('click', function () {\n      removeAllChild(listContainer);\n      search();\n    }); //searched ingredient click event\n\n    $(document).on('click', '.point', function (event) {\n      var i = event.target.value;\n      resultCon.name = resultList[i].name;\n      resultCon.id = resultList[i].id;\n      resultCon.price = resultList[i].price;\n      inputValue.textContent = resultCon.name;\n    });\n\n    function createIngredientHandler() {\n      if (gram.value === \"\" && price.value === \"\") {\n        console.log(\"가격과 무게가 널임\");\n      } else {\n        var g_per_price = Math.round((price.value / gram.value + Number.EPSILON) * 100) / 100;\n        console.log(g_per_price);\n        $alert.removeClass('alert-success alert-warning');\n        $.ajax('/create-ingredient', {\n          method: 'POST',\n          data: JSON.stringify({\n            \"name\": name.value,\n            \"price\": g_per_price\n          }),\n          contentType: \"application/json\",\n          success: function success(result) {\n            $alert.show().addClass('alert-success').text('Upload success');\n            document.getElementById('collapse').ariaExpanded = \"false\";\n            document.getElementById('create-ingredient').classList.remove('show');\n            name.value = \"\";\n            gram.value = \"\";\n            price.value = \"\";\n            jsonValue = JSON.parse(result);\n            inputValue.textContent = jsonValue.name;\n            resultCon.id = jsonValue.id;\n            resultCon.name = jsonValue.name;\n            resultCon.price = jsonValue.price;\n          },\n          error: function error() {\n            $alert.show().addClass('alert-warning').text('Upload error');\n          }\n        });\n      }\n    } //create ingredient\n\n\n    createIngBtn.addEventListener(\"click\", createIngredientHandler);\n  });\n}); //remove all child function\n\nvar removeAllChild = function removeAllChild(node) {\n  while (node.hasChildNodes()) {\n    node.removeChild(node.lastChild);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/resources/assets/js/searchIngredient.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/main/resources/assets/js/searchIngredient.js"]();
/******/ 	
/******/ })()
;